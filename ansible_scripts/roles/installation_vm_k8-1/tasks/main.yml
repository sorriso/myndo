---
- name: Adding apt repository for Kubernetes
  become: true
  copy:
    content: |
              [kubernetes]
              name=Kubernetes
              baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
              enabled=1
              gpgcheck=1
              repo_gpgcheck=1
              gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    dest: /etc/yum.repos.d/kubernetes.repo
  tags: [k8]

- name: Clean cache
  become: true
  yum:
    update_cache: yes
  tags: [k8]

- name: upgrade all packages
  become: true
  yum:
    name: '*'
    state: latest
    exclude: docker*,containerd.io*,gluster*
  tags: [k8,centos]

- name: Install k8
  become: true
  yum:
    name:
      - kubelet-{{ k8_version }}
      - kubeadm-{{ k8_version }}
      - kubectl-{{ k8_version }}
    state: present
  tags: [k8,centos]

- name: enable K8 service
  become: true
  service:
      name: kubelet.service
      enabled: yes
  tags: [k8]

- name: Start k8 service
  become: true
  service:
      name: kubelet.service
      state: started
  tags: [k8]

- name: Disable swap 1 on 2
  become: true
  command: sed -i '/swap/d' /etc/fstab
  tags: [k8]

- name: Disable swap 2 on 2
  become: true
  command: swapoff -a
  tags: [k8]

- name: Clean up previous cluster line in /etc/hosts file is any
  become: true
  lineinfile:
    dest: "/etc/hosts"
    regex: "^(?!g-).*$"
    state: absent
    firstmatch: no
    backup: no
  tags: [k8]

- name: Get current list (centos)
  set_fact: foo_item="{{ hostvars[item]['ansible_host'] }} {{ item }}"
  with_items: "{{ groups['cluster_all'] }}"
  register: foo_result
  tags: [k8,centos]

- name: make a list (centos)
  set_fact: foo="{{ foo_result.results | map(attribute='ansible_facts.foo_item') | list }}"
  tags: [k8,centos]

- name: Set list to facts (centos)
  set_fact: foo="{{ foo | list }}"
  tags: [k8,centos]

- name: Update /etc/hosts file (centos)
  become: true
  lineinfile:
    dest: "/etc/hosts"
    insertafter: "EOF"
    line: "{{ item }}"
  with_items: "{{ foo }}"
  tags: [k8,centos]

- name: Get instances facts (amzn2)
  vars:
    ansible_python_interpreter: /usr/bin/python3
  ec2_instance_info:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Environment": "{{ aws_env }}"
      "instance-state-name": "running"
  register: result_instance_fact
  tags: [k8,amzn2]

- name: Update /etc/hosts file (amzn2)
  become: true
  lineinfile:
    dest: "/etc/hosts"
    insertafter: "EOF"
    line: "{{ item.private_ip_address }} {{ item.tags.Name | regex_replace('_', '-') }}"
  with_items: "{{ result_instance_fact.instances }}"
  tags: [k8,aws]

- name: install CRI-O as CRI runtime prerequisite 1 on 3
  become: true
  command: modprobe overlay
  tags: [k8]

- name: install CRI-O as CRI runtime prerequisite 2 on 3
  become: true
  command: modprobe br_netfilter
  tags: [k8]

- name: install CRI-O as CRI runtime prerequisite 3 on 3
  become: true
  copy:
    content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.ipv4.ip_forward                 = 1
              net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
  tags: [k8]

- name: install CRI-O as CRI runtime prerequisite 2 on 3
  become: true
  command: sysctl --system
  tags: [k8]
